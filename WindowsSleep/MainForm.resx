<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9O3aAP///wDWtW4Ky6BFPMKQJYDAjB27wIwd7byF
        EPy5gAX/uYAF/7yFEPzAjB3twIwdu8KQJYDLoEU81rVuCv///wD07doAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANCrWQDVs2kIyJo4SMGNH6e7gwzmuoAG/bh9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uoAG/buDDObBjR+nx5k4SNWyaAjQqlgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOnWrwCXQQAAzaNKJ8GOIZq7gwzvuH4B/7h9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h+Af+7gwzvwY4hms2j
        SieWQAAA6dWuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdwYUA////AMeZN0a+iBfPuX4C/rh9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9
        AP+5fgL+vogXz8iZN0f///8B3b+CAAAAAAAAAAAAAAAAAAAAAAAAAAAA59GmAP///wHFlTBTvIUQ47h9
        Af+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fAD/t3wA/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+4fQH/vYUQ5MaVMFP///8B59GmAAAAAAAAAAAAAAAAANCpVwCzdQAAx5k4R72F
        EOS4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+3fAD/uH0B/8CMHf/WtGv/y6FG/7d6AP+3fAD/t3wA/7d8
        AP+3fAD/t3wA/7d8AP+4fQD/uH0A/7h9AP+4fQD/vYUQ5MeZN0ezcwAA0KlXAAAAAADw5MsAxZYwAM2k
        Sye+iRfPuH0B/7h9AP+4fQD/uH0A/7h9AP+3fAD/uoAG/8STKv/Yt3P/7uDC//37+P/au3r/wIwe/8OR
        KP/DkSf/w5En/8ORJ//DkSf/wY0g/7l+A/+4fQD/uH0A/7h9AP+4fQH/vokXz82kSyfFljAA8OTLANKu
        YADavHwIwY4hnLl+A/+4fQD/uH0A/7h9AP+4fQD/u4MM/8uhRv/hyJP/9eza//79+////////////97C
        h//r2rb/8+jS//Ln0f/y59H/8ufR//Tr2f/w48j/vYYS/7h9AP+4fQD/uH0A/7h9AP+5fgP/wY4hnNq8
        fAjTrmAAwpAlAMiaOEi7gwzwuH0A/7h9AP+4fQD/uH0A/7d7AP/SrF3/+vbt/////v//////////////
        ////////2bl2/76HFP/AjB3/wIwc/8CMHP+/ihn/zaNK//Ln0P+9hxP/uHwA/7h9AP+4fQD/uH0A/7h9
        AP+7gwzwyJo5SMKQJQDXtnAJwY0fp7h+Af+4fQD/uH0A/7h9AP+4fQD/t3oA/9m5dv//////////////
        ///////////////////YuHT/tnoA/7d8AP+3fAD/t3wA/7d6AP/GljP/8ebO/72HE/+4fAD/uH0A/7h9
        AP+4fQD/uH0A/7h+Af/BjR+n17ZwCcugRTm7gwzluH0A/7h9AP+4fQD/uH0A/7h9AP+3egD/2Lh1////
        /////////////////////////////9i4c/+3egD/uH0A/7h9AP+4fQD/t3sA/8aXM//x5s7/vYcT/7h8
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7uDDOXLoEU5w5Amf7qABv64fQD/uH0A/7h9AP+4fQD/uH0A/7d6
        AP/YuHX/////////////////////////////////2Lhz/7d6AP+4fQD/uH0A/7h9AP+3ewD/xpcz//Hm
        zv+9hxP/uHwA/7h9AP+4fQD/uH0A/7h9AP+4fQD/uoAG/sORJn/AjB27uH0A/7h9AP+4fQD/uH0A/7h9
        AP+4fQD/t3oA/9i4df/////////////////////////////////Yt3L/t3sA/7h9AP+4fQD/uH0A/7d7
        AP/GlzP/8ebO/72HE/+4fAD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/wIwdu8CMHu24fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+3egD/2Lh1/////////////////////////////////9i3cv+3ewD/uH0A/7h9
        AP+4fQD/t3sA/8aXM//x5s7/vYcT/7h8AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP/AjB3tvIUP/Lh9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7d6AP/YuHX/////////////////////////////////2Ldy/7d7
        AP+4fQD/uH0A/7h9AP+3ewD/xpcz//Hmzv+9hxP/uHwA/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/72F
        EPy5fgP/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/t3oA/9i4df//////////////////////////////
        ///Yt3L/t3sA/7h9AP+4fQD/uH0A/7d7AP/GlzP/8ebO/72HE/+4fAD/uH0A/7h9AP+4fQD/uH0A/7h9
        AP+4fQD/uoAF/7l+A/+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP+3egD/2Lh1////////////////////
        /////////////9i3cv+3ewD/uH0A/7h9AP+4fQD/t3sA/8aXM//x5s7/vYcT/7h8AP+4fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+5fwP/vIUP/Lh9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7d6AP/YuHX/////////
        ////////////////////////2Lhz/7d6AP+4fQD/uH0A/7h9AP+3ewD/xpcz//Hmzv+9hxP/uHwA/7h9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7yED/zAjB7suH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/t3oA/9i4
        df/////////////////////////////////Yt3P/t3sA/7h9AP+4fQD/uH0A/7d7AP/GlzP/8ubP/72H
        FP+4fAD/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/wIwe7cCMHbu4fQD/uH0A/7h9AP+4fQD/uH0A/7h9
        AP+3egD/2Lh1/////////////////////////////////9i3c/+3ewD/uH0A/7h9AP+4fQD/t3sA/8aX
        M//y58//vogW/7h8AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9AP/AjB27w5Amf7qABv64fQD/uH0A/7h9
        AP+4fQD/uH0A/7d6AP/YuHX/////////////////////////////////2Ldy/7d7AP+4fQD/uH0A/7h9
        AP+3ewD/xpcz//Lnz/++iBX/uHwA/7h9AP+4fQD/uH0A/7h9AP+4fQD/uoAG/sOQJn/LoEU5u4MM5bh9
        AP+4fQD/uH0A/7h9AP+4fQD/t3oA/9i4df/////////////////////////////////YuHP/t3oA/7h9
        AP+4fQD/uH0A/7d7AP/GlzP/8ufP/76IFf+4fAD/uH0A/7h9AP+4fQD/uH0A/7h9AP+7gwzly6BFOde2
        cAnBjR+nuH4B/7h9AP+4fQD/uH0A/7h9AP+3egD/2bl1/////////////////////////////////9i4
        dP+2egD/t3wA/7d8AP+3fAD/t3oA/8aWM//y5s//vocU/7h8AP+4fQD/uH0A/7h9AP+4fQD/uH4B/8GN
        H6fXtnAJwo8kAMiaOEi7gwzvuH0A/7h9AP+4fQD/uH0A/7d7AP/WtGz//v78////////////////////
        ////////2bl2/76HFP/AjB3/wIwc/8CMHP+/ihn/zaNK//Ln0P++hxT/uHwA/7h9AP+4fQD/uH0A/7h9
        AP+7gwzwyJo4SMKQJQDSrV8A27x8CMGOIZu5fgP/uH0A/7h9AP+4fQD/uHwA/8CLG//Yt3L/7t/A//v4
        8P/////////////////ewof/69q2//Po0v/y59H/8ufR//Ln0f/069n/7+LF/72GEf+4fQD/uH0A/7h9
        AP+4fQD/uX4D/8GOIZzavHwI0q5gAPHn0QDFljEAzaNLJ76JF8+4fQH/uH0A/7h9AP+4fQD/uHwA/7h9
        Av+/iRf/z6dS/+TPoP/37+H//////9m6eP/AjB7/w5Eo/8ORJ//DkSf/w5En/8ORJ//BjR//uX4D/7h9
        AP+4fQD/uH0A/7h9Af++iRfPzaRLJ8WWMADw5MsAAAAAANCpVwCxdAAAx5k3Rr2GEeO4fQD/uH0A/7h9
        AP+4fQD/uH0A/7h8AP+3fAD/uoIJ/8eXNP/hx5L/0q1e/7Z6AP+3fAD/t3wA/7d8AP+3fAD/t3wA/7d8
        AP+4fQD/uH0A/7h9AP+4fQD/vIYR48eZN0axdAAA0KlXAAAAAAAAAAAAAAAAAOratQD///8AxpYxUb2G
        EeO4fQH/uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/t3wA/7yED/+8hA3/uH0A/7h9AP+4fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0B/72FEOTFljBS////AOratQAAAAAAAAAAAAAAAAAAAAAAAAAAAN7C
        hwD///8AyJo4Rb6JF8+5fgL+uH0A/7h9AP+4fQD/uH0A/7h9AP+4fQD/uHwA/7h9AP+4fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7l+Av6+iRfPyJk4R////wHdwIMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOnYsgCYQAAAzKNKJ8GOIpq7gwzvuH4B/7h9AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7h+Af+7gwzvwY4imsyjSieYQAAA6diyAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRq1kA1bNpCMiaOEfBjR+nu4MM5rqABv24fQD/uH0A/7h9
        AP+4fQD/uH0A/7h9AP+4fQD/uH0A/7qABv27gwzmwY0fp8iaOEfVs2kI0atZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD37t8A////ANe2bwrLoEU7wpAlf8CM
        HbvAjB7svIUP/Ll+A/+5fgP/vIUP/MCMHu3AjB27wpAlf8uhRTzWtm4K////APTt2gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAD+AAAAfgAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAA/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>